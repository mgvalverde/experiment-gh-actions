name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: read

env:
  POETRY_VERSION: "1.8.3"
  PYTHON_VERSION: "3.9"


jobs:

  build:
    name: Release GH
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    steps:
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry v${{ env.POETRY_VERSION }}
        run: pipx install poetry==${{ env.POETRY_VERSION }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Python Semantic Release to prepare release
        id: release
        run: poetry run  semantic-release version --no-vcs-release
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

#      - name: Publish to TestPyPI
#        uses: pypa/gh-action-pypi-publish@release/v1
#        if: steps.release.outputs.released == 'true'
#        with:
#          repository-url: https://test.pypi.org/legacy/
#
#      - name: Test install from TestPyPI        # Note: needs to sleep to give a PyPI a moment, otherwise it installs the previous version
#        run: |
#            sleep 15
#            pip install \
#            --index-url https://test.pypi.org/simple/ \
#            --extra-index-url https://pypi.org/simple \
#            experiment-gh-actions
#            python -c "import blabla; print('Import successful')"
#
#      - name: Publish to PyPI
#        uses: pypa/gh-action-pypi-publish@release/v1
#        if: steps.release.outputs.released == 'true'
#
#      - name: Publish package distributions to GitHub Releases
#        uses: python-semantic-release/upload-to-gh-release@main
#        if: steps.release.outputs.released == 'true'
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Build docs
#        run: poetry run mkdocs build
#
#      - name: Publish docs
#        run: poetry run mkdocs gh-deploy
#
#  release-gh:
#    name: Release Github
#    runs-on: ubuntu-latest
#    needs:
#      - build
#
#    environment:
#      name: pypi
#      url: https://test.pypi.org/p/experiment-gh-actions
#
#    permissions:
#      id-token: write
#      contents: write
#
#    steps:
#      - name: Download all the dists
#        uses: actions/download-artifact@v3
#        with:
#          name: python-package-distributions
#          path: dist/
#      - name: Publish distribution ðŸ“¦ to PyPI
#        uses: pypa/gh-action-pypi-publish@release/v1
#
#  release-testpypi:
#    name: Release Test PyPI
#    environment:
#      name: pypi
#      url: https://test.pypi.org/p/experiment-gh-actions
#    needs:
#      - release-gh
#
#    permissions:
#      id-token: write
#      contents: write
#    steps:
#
#  release-pypi:
#    needs:
#      - release-testpypi
#
#    name: Release PyPI
#    runs-on: ubuntu-latest
#    environment:
#      name: pypi
#      url: https://pypi.org/p/experiment-gh-actions
#
#    permissions:
#      id-token: write
#      contents: write
#
#    steps:
#
