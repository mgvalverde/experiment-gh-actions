name: Publish Docs

on:
  workflow_dispatch:
    inputs:
      ref_tag:
        description: "Tag. It'll be use to tag also the docs version. This tag must exist, and applied to an existing commit"
        type: string
        required: false
        default: ""
  workflow_call:
    inputs:
      ref_tag:
        description: "Tag. It'll be use to tag also the docs version. This tag must exist, and applied to an existing commit"
        type: string
        required: false
        default: ""

env:
  POETRY_VERSION: "1.8.3"
  PYTHON_VERSION: "3.9"

jobs:

  publish-docs:
    name: Publish Docs
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    env:
      INPUT_VERSION: ${{inputs.ref_tag}}
      LATEST_VERSION: $(git tag --sort=taggerdate | tail -1 | cut -c2-)
      GIT_COMMITTER_NAME: ci-bot
      GIT_COMMITTER_EMAIL: ci-bot@example.com

    steps:
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry v${{ env.POETRY_VERSION }}
        run: pipx install poetry==${{ env.POETRY_VERSION }}
      - name: Get Target Version
        run: echo "TARGET_VERSION=${{env.INPUT_VERSION || env.LATEST_VERSION}} " >> $GITHUB_ENV
      - name: Get Short Version
        run: echo "X_VERSION=$(echo ${{env.TARGET_VERSION}}  | sed -E 's/(v[0-9]+\.[0-9]+)\.[0-9]+/\1.x/')" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{env.TARGET_VERSION}}
          token: ${{ secrets.PAT_PUBLISH_DOCS }}
#      - name: Setup git user
#        run: |
#          git config user.name ci-bot
#          git config user.email ci-bot@example.com
      - name: Install dev dependencies
        run: poetry install --no-interaction --only=dev  # NOTE: this is needed for mkdocs etc
      - name: Publish new docs version
        run: | 
          poetry run mike deploy \
          --push \
          --update-aliases ${{env.X_VERSION}} latest
          poetry run mike set-default --push latest

